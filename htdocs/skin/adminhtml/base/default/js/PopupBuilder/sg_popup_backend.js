$jsg(document).ready(function($){	sgBeckeendObj = new  beckend();	sgBeckeendObj.sgInit();	function toggleEditor() {        if (tinyMCE.getInstanceById('html') == null) {            tinyMCE.execCommand('mceAddControl', true, 'html');        } else {            tinyMCE.execCommand('mceRemoveControl', true, 'html');        }    }    $jsg("[name='all-product-stores[]'").trigger("change");});function beckend() {}beckend.prototype.sgInit =  function() {	this.imageUpload(); /* It's Image Upload function */	this.deletePopup(); /* Delete popup */ 	this.titleNotEmpty(); /* Check title is Empty */ 	this.showThemePicture(); /* Show themes pictures */ 	this.showEffects(); /* Show effect type */ 	this.pageAcordion(); /* For page acordion divs */ 	this.fixedPostionSelection(); /* Fuctionality for selected postion */ 	this.showInfo(); /* Show description options */ 	this.opasictyRange(); /* Opcity range */ 	this.subOptionContents(); 	this.addCountris(); 	this.sgImagePopup(); /* Setup image */ 	this.sgOverlayColor(); 	this.checkBoxAcoprdiaon(); 	this.showCloseTextFieldForTheme();	this.selectProductsFromStores();	this.fomDataToHiddenInputs();  }beckend.prototype.storesMultiselectSelectedValues = function(storeSelectBox) {	var selectedValues = [];	storeSelectBox.find("option:selected").each(function() {		selectedValues.push($jsg(this).val());	});	return selectedValues;}beckend.prototype.fomDataToHiddenInputs = function() {	var that = this;	if(!$jsg(".all-selected-posts-selectbox").length) {		return;	}	$jsg(".sg-popup-builder-form").submit(function() {		var selectedPosts = $jsg(".all-selected-posts-selectbox > option");				var selectedPostsString = that.dataProcesingInHiddenInput(selectedPosts);		$jsg('.sg-selected-posts').val(selectedPostsString);	});}beckend.prototype.dataProcesingInHiddenInput = function(pages) {	selectedPages = [];		for(i=0; i<pages.length; i++) {		var currentOption = pages[i];		var currentValue = currentOption.value;		var selected = jQuery(currentOption).is(":selected");		/*return -1 when does not have that value*/		var isHaveThisInValues = selectedPages.indexOf(currentOption.value);		if(selected) {			if(isHaveThisInValues == '-1') {				selectedPages.push(currentOption.value);			}		}		else {			if(isHaveThisInValues != -1) {				selectedPages.splice(isHaveThisInValues, 1);			}		}	}	return selectedPages;}beckend.prototype.selectProductsFromStores = function() {	var that = this;		$jsg("[name='all-product-stores[]'").bind('change', function() {			var form = new FormData();			var ajaxUrl = $jsg(".js-sg-popup-products-data").attr("data-prouct-stores-url");		var key = $jsg(".js-sg-popup-products-data").attr("data-prouct-stores-key");		var storeIds = that.storesMultiselectSelectedValues($jsg(this));		var popupId = $jsg(".js-sg-popup-products-data").attr("data-popup-id");			form.append("storeIds", storeIds);		form.append("popupId", popupId);		form.append('form_key', key);		form.append('modelName','Sgpopup');		$jsg.ajax({			type:'POST',			url: ajaxUrl,			beforeSend: function() {				$jsg('.sg-products-spinner').removeClass('sg-hide');			},			data: form,			cache:false,			processData: false,			contentType: false,			success:function(data, d){				$jsg(".all-selected-posts-selectbox").find("option").remove();				$jsg(".all-selected-posts-selectbox").append(data);				$jsg('.sg-products-spinner').addClass('sg-hide');			},			error: function(data){				/*console.log("error");				console.log(data);*/			}		});	});}beckend.prototype.showCloseTextFieldForTheme = function() {		var that = this;	this.sgAllowChangeButtonText();	$jsg("[name='theme']").bind("change", function() {		that.sgAllowChangeButtonText()	});}beckend.prototype.sgAllowChangeButtonText = function() {		if($jsg("[sgpoupnumber='4'][name='theme']").prop( "checked" )) {		$jsg(".theme-colse-text").removeClass("sg-hide");	}	else {		$jsg(".theme-colse-text").addClass("sg-hide");	}}beckend.prototype.checkboxAcordion = function(element) {	if(!element.is(':checked')) {		element.next("div").css({'display': 'none'});	}	else {		element.next("div").css({'display':'inline-block'});	}}beckend.prototype.imageUpload = function() {	var that = this;		$jsg("#file-upload-button").change(function () {		var fileName = $jsg(this).val().replace('C:\\fakepath\\', '');		//var fileName = $jsg(this).val();		$jsg("#file-upload-filename").html(fileName);		$jsg("#file-upload-button").val();	});}beckend.prototype.sgImagePopup = function() {	var val = $jsg('[name="ad_image"]').attr('data-image-value');	if(val == '') return; 	$jsg('#file-upload-filename').html(val);	var imageUrl = $jsg(".sg-skin-url").attr("data-Skin-url")+val;	$jsg(".show-image-contenier").css({"background-image": 'url("'+imageUrl+'")'});	$jsg(".no-image").html("");}beckend.prototype.deletePopup = function() {	$jsg(".sg-js-delete-link").bind('click',function() {		var form = new FormData();				var request = confirm("Are you sure?");		if(!request) {			return false;		}		var popupId = $jsg(this).attr("data-sg-popup-id");		var uploadUrl = $jsg(this).attr("data-delete-popup-url");		var modelName = $jsg(this).attr("data-model-name");			var key = $jsg(this).attr("data-form-key");		form.append("popupId", popupId);		form.append('form_key', key);		form.append('modelName', modelName);		$jsg.ajax({			type:'POST',			url: uploadUrl,			data: form,			cache:false,			processData: false,			contentType: false,			success:function(data, d){				window.location.reload();			},			error: function(data){				/*console.log("error");				console.log(data);*/			}		});	});}beckend.prototype.titleNotEmpty = function() {	$jsg("#add-form").submit(function() {		alert('5555');		var popupTitle = $jsg(".sg-js-popup-title").val();		if(popupTitle == '' || popupTitle == ' ') {			alert('Please fill in title field');			return false;		}	});}beckend.prototype.showThemePicture = function() {	$jsg(".popup_theme_name").bind("mouseover",function(e) {		$jsg('.theme'+$jsg(this).attr("sgpoupnumber")+'').css('display', 'block');	});}beckend.prototype.showEffects = function() {	effectTimer = '';	$jsg('select[name="effect"]').bind('change', function() {		if (effectTimer!='') {			clearTimeout(effectTimer);		}		effectTimer = setTimeout(function() {			$jsg("#effectShow").hide();			effectTimer = '';		},1400);		$jsg("#effectShow").removeClass();		$jsg("#effectShow").show();		$jsg("#effectShow").addClass('sg-animated '+$jsg(this).val()+'');	});	$jsg('.js-preview-effect').click(function() {		if (effectTimer!='') {			clearTimeout(effectTimer);		}		effectTimer = setTimeout(function() {			$jsg("#effectShow").hide();			effectTimer = '';		},1400);		$jsg("#effectShow").removeClass();		$jsg("#effectShow").show();		$jsg("#effectShow").addClass('sg-animated '+$jsg('select[name="effect"] option:selected').val()+'');	});}beckend.prototype.pageAcordion = function() {}beckend.prototype.fixedPostionSelection = function() {	$jsg(".js-fixed-position-style").bind("click",function() {		var sgelement = $jsg(this);		var sgpos = sgelement.attr('data-sgvalue');		$jsg(".js-fixed-position-style").css("backgroundColor","#FFFFFF");		$jsg(this).css("backgroundColor","rgba(70,173,208,0.5)");		$jsg(".js-fixed-postion").val(sgpos);	});	$jsg(".js-fixed-position-style").bind("mouseover",function() {		$jsg(".js-fixed-position-style").css("backgroundColor","#FFFFFF");		$jsg(this).css("backgroundColor","rgb(70,173,208)");		$jsg(".js-fixed-position-style").each(function() {			if ($jsg(this).attr("data-sgvalue") == $jsg('.js-fixed-postion').val())				$jsg(this).css("backgroundColor","rgba(70,173,208,0.5)");		});	});	$jsg(".js-fixed-position-style").bind("mouseout",function() {		if($jsg(".js-fixed-position-style").attr("data-sgvalue") !== $jsg(".js-fixed-postion").val() || $jsg(".js-fixed-postion").val() == 1) {			$jsg(this).css("backgroundColor","#FFFFFF");		}		$jsg(".js-fixed-position-style").each(function() {			if ($jsg(this).attr("data-sgvalue") == $jsg('.js-fixed-postion').val()) {				$jsg(this).css("backgroundColor","rgba(70,173,208,0.5)");			}		});	});	if($jsg('.js-fixed-postion').val()!='') {		$jsg(".js-fixed-position-style").each(function(){			if ($jsg(this).attr("data-sgvalue") == $jsg('.js-fixed-postion').val()) {				$jsg(this).css("backgroundColor","rgba(70,173,208,0.5)");			}		});	}}beckend.prototype.showInfo = function() {		$jsg(".dashicons.dashicons-info").hover(			function() {				$jsg(this).next('span').css({"display": 'inline-block'});			}, function() {				$jsg(this).next('span').css({"display": 'none'});			}		);}beckend.prototype.opasictyRange = function() {	if (typeof Powerange != "undefined") {		var dec = document.querySelector('.js-decimal');		function displayDecimalValue() {			var dec = document.querySelector('.js-decimal');			document.getElementById('js-display-decimal').innerHTML = dec.value;		}		var initDec = new Powerange(dec, { decimal: true, callback: displayDecimalValue, max: 1, start: $jsg(".js-decimal").attr("value") });	}}beckend.prototype.showOptionsInfo = function(cehckboxSelector, param2) {	if($jsg(""+cehckboxSelector+":checked").length == 0) {		$jsg("."+param2+"").css({'display': 'none'});	}	else	{		$jsg("."+param2+"").css({'display':'inline-block'});	}	$jsg(""+cehckboxSelector+"").bind("click",function() {		if($jsg(""+cehckboxSelector+":checked").length == 0) {			$jsg("."+param2+"").css({'display':'none'});		}		else {			$jsg("."+param2+"").css({'display':'inline-block'});		}	});	$jsg('input.popup_theme_name').bind('mouseout',function() {		$jsg('.theme1').css('display', 'none');		$jsg('.theme2').css('display', 'none');		$jsg('.theme3').css('display', 'none');		$jsg('.theme4').css('display', 'none');		$jsg('.theme5').css('display', 'none');	});}beckend.prototype.subOptionContents = function() {	this.showOptionsInfo("#js-auto-close", "js-auto-close-content");	this.showOptionsInfo("#js-scrolling-event-inp", "js-scrolling-content");	this.showOptionsInfo("#js-countris", "js-countri-content");	this.showOptionsInfo("#js-popup-only-once", "js-popup-only-once-content");	this.showOptionsInfo(".js-on-all-pages", "js-all-pages-content");	this.showOptionsInfo(".js-on-all-posts", "js-all-posts-content");	this.showOptionsInfo(".js-checkbox-acordion", "fixed-wrapper");	var that = this;	var element = $jsg(".js-checkbox-acordion");	element.each(function() {		that.checkboxAcordion($jsg(this));	});	element.click(function() {		var elements = $jsg(this);		that.checkboxAcordion($jsg(this))	});}beckend.prototype.addCountris = function() {	var countyNames = [];	var countryIsos = [];	function addCountry(name,iso) {		countyNames.push(name);		countryIsos.push(iso);		$jsg("#countryIso").val(countryIsos.join(','));		$jsg('#countryName').tagsinput('add', countyNames.join(','));	}	$jsg(".addCountry").bind('click',function(){		optionCountryName = $jsg("[name='countris'] option:selected").text();		optionCountryIso = $jsg("[name='countris'] option:selected").val();		addCountry(optionCountryName,optionCountryIso);	});	$jsg('input').on('itemRemoved', function(event) {		var removeCountryName = event.item;		countryNameIso = countyNames.indexOf(removeCountryName);		countryIsos.splice(countryNameIso,1);		countyNames.splice(countryNameIso,1);		$jsg("#countryIso").val(countryIsos.join(','));	});	if(typeof popupCountries != "undefined" && typeof popupCountries != "undefined"){		sgCountryNameArray = popupCountries.sgCountryName.split(",");		sgCountryIsoArray = popupCountries.sgCountryIso.split(",");		for(i=0; i <= sgCountryIsoArray.length; i++) {			addCountry(sgCountryNameArray[i],sgCountryIsoArray[i]);		}	};}beckend.sgTyniMce = function() {	wysiwygpage_content = new tinyMceWysiwygSetup("sg-popup-html", {		"enabled":true,		"hidden":false,		"use_container":false,		"add_variables":true,		"add_widgets":true,		"no_display":false,		"translator":{},		"encode_directives":true,		"directives_url": sgTinymceOptions.directives_url,		"popup_css":sgTinymceOptions.popup_css,		"content_css":sgTinymceOptions.content_css,		"width":"100%",		"directives_url_quoted":sgTinymceOptions.directives_url_quoted,		"add_images":true,		"files_browser_window_url":sgTinymceOptions.files_browser_window_url,		"files_browser_window_width":"100%",		"files_browser_window_height":600,		"tab_id":"content_section",		"widget_plugin_src":sgTinymceOptions.widget_plugin_src,		"widget_images_url":sgTinymceOptions.widget_images_url,		"widget_placeholders":[			"catalog__category_widget_link.gif","catalog__product_widget_link.gif",			"catalog__product_widget_new.gif",			"cms__widget_block.gif",			"cms__widget_page_link.gif",			"default.gif",			"reports__product_widget_compared.gif",			"reports__product_widget_viewed.gif"		],		"widget_window_url":sgTinymceOptions.widget_window_url,		"firebug_warning_title":"Warning",		"firebug_warning_text":"Firebug is known to make the WYSIWYG editor slow unless it is turned off or configured properly.",		"firebug_warning_anchor":"Hide"});	Event.observe(window, "load", wysiwygpage_content.setup.bind(wysiwygpage_content, "exact"));	editorFormValidationHandler = wysiwygpage_content.onFormValidation.bind(wysiwygpage_content);	varienGlobalEvents.attachEventHandler("formSubmit", editorFormValidationHandler);	varienGlobalEvents.attachEventHandler("tinymceBeforeSetContent", wysiwygpage_content.beforeSetContent.bind(wysiwygpage_content));	varienGlobalEvents.attachEventHandler("tinymceSaveContent", wysiwygpage_content.saveContent.bind(wysiwygpage_content));	varienGlobalEvents.clearEventHandlers("open_browser_callback");	varienGlobalEvents.attachEventHandler("open_browser_callback", wysiwygpage_content.openFileBrowser.bind(wysiwygpage_content));}beckend.prototype.sgOverlayColor = function() {	$jsg(".sg-color-picker").minicolors({		change: function() {		}	});}beckend.prototype.checkBoxAcoprdiaon = function() {	var element = $jsg(".js-checkbox-acordion-content");	var that = this;		element.bind("change", function() {		var content = $jsg(this).attr("data-acordion-conetnt");				that.acordionConetent($jsg(this), content);	});	element.trigger("change");}beckend.prototype.acordionConetent = function(element, content) {	if (!element.prop("checked")) {		$jsg("."+content+"").css({'display':'none'});	}	else {		$jsg("."+content+"").css({"display": "block"});	}}